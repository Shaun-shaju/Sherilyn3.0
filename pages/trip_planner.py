import streamlit as st
from server.ai_engine import chat
from server.firestore_dump import chat_load
import time

currencies = [
    "AED - United Arab Emirates Dirham",
    "AFN - Afghan Afghani",
    "ALL - Albanian Lek",
    "AMD - Armenian Dram",
    "ANG - Netherlands Antillean Guilder",
    "AOA - Angolan Kwanza",
    "ARS - Argentine Peso",
    "AUD - Australian Dollar",
    "AWG - Aruban Florin",
    "AZN - Azerbaijani Manat",
    "BAM - Bosnia-Herzegovina Convertible Mark",
    "BBD - Barbadian Dollar",
    "BDT - Bangladeshi Taka",
    "BGN - Bulgarian Lev",
    "BHD - Bahraini Dinar",
    "BIF - Burundian Franc",
    "BMD - Bermudian Dollar",
    "BND - Brunei Dollar",
    "BOB - Bolivian Boliviano",
    "BRL - Brazilian Real",
    "BSD - Bahamian Dollar",
    "BTN - Bhutanese Ngultrum",
    "BWP - Botswana Pula",
    "BYN - Belarusian Ruble",
    "BZD - Belize Dollar",
    "CAD - Canadian Dollar",
    "CDF - Congolese Franc",
    "CHF - Swiss Franc",
    "CLP - Chilean Peso",
    "CNY - Chinese Yuan",
    "COP - Colombian Peso",
    "CRC - Costa Rican Col√≥n",
    "CUP - Cuban Peso",
    "CVE - Cape Verdean Escudo",
    "CZK - Czech Koruna",
    "DJF - Djiboutian Franc",
    "DKK - Danish Krone",
    "DOP - Dominican Peso",
    "DZD - Algerian Dinar",
    "EGP - Egyptian Pound",
    "ERN - Eritrean Nakfa",
    "ETB - Ethiopian Birr",
    "EUR - Euro",
    "FJD - Fijian Dollar",
    "FKP - Falkland Islands Pound",
    "FOK - Faroese Kr√≥na",
    "GBP - British Pound",
    "GEL - Georgian Lari",
    "GGP - Guernsey Pound",
    "GHS - Ghanaian Cedi",
    "GIP - Gibraltar Pound",
    "GMD - Gambian Dalasi",
    "GNF - Guinean Franc",
    "GTQ - Guatemalan Quetzal",
    "GYD - Guyanese Dollar",
    "HKD - Hong Kong Dollar",
    "HNL - Honduran Lempira",
    "HRK - Croatian Kuna",
    "HTG - Haitian Gourde",
    "HUF - Hungarian Forint",
    "IDR - Indonesian Rupiah",
    "ILS - Israeli New Shekel",
    "IMP - Isle of Man Pound",
    "INR - Indian Rupee",
    "IQD - Iraqi Dinar",
    "IRR - Iranian Rial",
    "ISK - Icelandic Kr√≥na",
    "JMD - Jamaican Dollar",
    "JOD - Jordanian Dinar",
    "JPY - Japanese Yen",
    "KES - Kenyan Shilling",
    "KGS - Kyrgyzstani Som",
    "KHR - Cambodian Riel",
    "KID - Kiribati Dollar",
    "KMF - Comorian Franc",
    "KRW - South Korean Won",
    "KWD - Kuwaiti Dinar",
    "KYD - Cayman Islands Dollar",
    "KZT - Kazakhstani Tenge",
    "LAK - Lao Kip",
    "LBP - Lebanese Pound",
    "LKR - Sri Lankan Rupee",
    "LRD - Liberian Dollar",
    "LSL - Lesotho Loti",
    "LYD - Libyan Dinar",
    "MAD - Moroccan Dirham",
    "MDL - Moldovan Leu",
    "MGA - Malagasy Ariary",
    "MKD - Macedonian Denar",
    "MMK - Myanmar Kyat",
    "MNT - Mongolian T√∂gr√∂g",
    "MOP - Macanese Pataca",
    "MRU - Mauritanian Ouguiya",
    "MUR - Mauritian Rupee",
    "MVR - Maldivian Rufiyaa",
    "MWK - Malawian Kwacha",
    "MXN - Mexican Peso",
    "MYR - Malaysian Ringgit",
    "MZN - Mozambican Metical",
    "NAD - Namibian Dollar",
    "NGN - Nigerian Naira",
    "NIO - Nicaraguan C√≥rdoba",
    "NOK - Norwegian Krone",
    "NPR - Nepalese Rupee",
    "NZD - New Zealand Dollar",
    "OMR - Omani Rial",
    "PAB - Panamanian Balboa",
    "PEN - Peruvian Sol",
    "PGK - Papua New Guinean Kina",
    "PHP - Philippine Peso",
    "PKR - Pakistani Rupee",
    "PLN - Polish Z≈Çoty",
    "PYG - Paraguayan Guaran√≠",
    "QAR - Qatari Riyal",
    "RON - Romanian Leu",
    "RSD - Serbian Dinar",
    "RUB - Russian Ruble",
    "RWF - Rwandan Franc",
    "SAR - Saudi Riyal",
    "SBD - Solomon Islands Dollar",
    "SCR - Seychellois Rupee",
    "SDG - Sudanese Pound",
    "SEK - Swedish Krona",
    "SGD - Singapore Dollar",
    "SHP - Saint Helena Pound",
    "SLE - Sierra Leonean Leone",
    "SOS - Somali Shilling",
    "SRD - Surinamese Dollar",
    "SSP - South Sudanese Pound",
    "STN - S√£o Tom√© and Pr√≠ncipe Dobra",
    "SYP - Syrian Pound",
    "SZL - Eswatini Lilangeni",
    "THB - Thai Baht",
    "TJS - Tajikistani Somoni",
    "TMT - Turkmenistan Manat",
    "TND - Tunisian Dinar",
    "TOP - Tongan Pa ªanga",
    "TRY - Turkish Lira",
    "TTD - Trinidad and Tobago Dollar",
    "TVD - Tuvaluan Dollar",
    "TZS - Tanzanian Shilling",
    "UAH - Ukrainian Hryvnia",
    "UGX - Ugandan Shilling",
    "USD - United States Dollar",
    "UYU - Uruguayan Peso",
    "UZS - Uzbekistani So ªm",
    "VES - Venezuelan Bol√≠var",
    "VND - Vietnamese ƒê·ªìng",
    "VUV - Vanuatu Vatu",
    "WST - Samoan TƒÅlƒÅ",
    "XAF - Central African CFA Franc",
    "XCD - East Caribbean Dollar",
    "XOF - West African CFA Franc",
    "XPF - CFP Franc",
    "YER - Yemeni Rial",
    "ZAR - South African Rand",
    "ZMW - Zambian Kwacha",
    "ZWL - Zimbabwean Dollar"
]

st.subheader("üåç Travel Planner")
if "user_data" in st.session_state:
    destination = st.text_input("Where are you going?", "Paris")
    orgin = st.text_input("Where are you starting your travel from", "Banglore")
    travel_dates = st.date_input("When are you traveling?", [])
    currency = st.selectbox("Select your currency", currencies)
    budget = st.number_input("What's your budget?", min_value=15, step=100)
    interests = st.multiselect(
        "What are your interests?",
        ["Adventure", "Culture", "Relaxation", "Food & Drink", "Nature", "Shopping"]
    )
    other_note = st.text_input("Preferences or other notes")
    user_query = f"I'm planning a trip from {orgin} to {destination} on {travel_dates} with a budget of {currency} {budget}. I'm interested in {', '.join(interests) if interests else 'various experiences'} and have the following preferences: {other_note if other_note else 'None'}"
    prompt = st.session_state['user_data']['prompt'] + "Create a personalized travel itinerary, including must-visit attractions, local experiences, recommended accommodations, dining options, and transportation tips. Ensure the itinerary is well-structured, realistic, and enjoyable, considering budget, travel dates, interests, and any specific preferences. Provide insights on cultural highlights, safety tips, and hidden gems to enhance the travel experience. Let the response follow user's choice of personality, style, topics, and behaviour."    
    if st.button("Get Answer"):
        if destination:
            st.info("üîç Lemme think of the best travel planner for ya üòäüòä")
            response = chat(user_query, prompt)            
            st.success("Your Answer is ready! üéâ")
            st.markdown(response)
            chat_load(st.session_state['user_data']['username'], "user", user_query)
            chat_load(st.session_state['user_data']['username'], "model", response)
        else:
            st.error("‚ö†Ô∏è Please enter a question.")

else:
    st.error("You need to authenticate first. Please login or sign up.")